{"version":3,"file":"510.thebe-lite.min.js","mappings":"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","sources":["webpack://thebe-lite/./node_modules/@jupyterlite/kernel/lib/kernel.js","webpack://thebe-lite/../../node_modules/comlink/dist/esm/comlink.mjs","webpack://thebe-lite/./node_modules/@jupyterlite/pyodide-kernel/lib/kernel.js","webpack://thebe-lite/./node_modules/@jupyterlite/pyodide-kernel/lib/ lazy namespace object"],"sourcesContent":["import { KernelMessage } from '@jupyterlab/services';\nimport { Signal } from '@lumino/signaling';\n/**\n * A base kernel class handling basic kernel messaging.\n */\nexport class BaseKernel {\n    /**\n     * Construct a new BaseKernel.\n     *\n     * @param options The instantiation options for a BaseKernel.\n     */\n    constructor(options) {\n        this._history = [];\n        this._executionCount = 0;\n        this._isDisposed = false;\n        this._disposed = new Signal(this);\n        this._parentHeader = undefined;\n        this._parent = undefined;\n        const { id, name, location, sendMessage } = options;\n        this._id = id;\n        this._name = name;\n        this._location = location;\n        this._sendMessage = sendMessage;\n    }\n    /**\n     * A promise that is fulfilled when the kernel is ready.\n     */\n    get ready() {\n        return Promise.resolve();\n    }\n    /**\n     * Return whether the kernel is disposed.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * A signal emitted when the kernel is disposed.\n     */\n    get disposed() {\n        return this._disposed;\n    }\n    /**\n     * Get the kernel id\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * Get the name of the kernel\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * The location in the virtual filesystem from which the kernel was started.\n     */\n    get location() {\n        return this._location;\n    }\n    /**\n     * The current execution count\n     */\n    get executionCount() {\n        return this._executionCount;\n    }\n    /**\n     * Get the last parent header\n     */\n    get parentHeader() {\n        return this._parentHeader;\n    }\n    /**\n     * Get the last parent message (mimic ipykernel's get_parent)\n     */\n    get parent() {\n        return this._parent;\n    }\n    /**\n     * Dispose the kernel.\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposed.emit(void 0);\n    }\n    /**\n     * Handle an incoming message from the client.\n     *\n     * @param msg The message to handle\n     */\n    async handleMessage(msg) {\n        this._busy(msg);\n        this._parent = msg;\n        const msgType = msg.header.msg_type;\n        switch (msgType) {\n            case 'kernel_info_request':\n                await this._kernelInfo(msg);\n                break;\n            case 'execute_request':\n                await this._execute(msg);\n                break;\n            case 'input_reply':\n                this.inputReply(msg.content);\n                break;\n            case 'inspect_request':\n                await this._inspect(msg);\n                break;\n            case 'is_complete_request':\n                await this._isCompleteRequest(msg);\n                break;\n            case 'complete_request':\n                await this._complete(msg);\n                break;\n            case 'history_request':\n                await this._historyRequest(msg);\n                break;\n            case 'comm_open':\n                await this.commOpen(msg);\n                break;\n            case 'comm_msg':\n                await this.commMsg(msg);\n                break;\n            case 'comm_close':\n                await this.commClose(msg);\n                break;\n            default:\n                break;\n        }\n        this._idle(msg);\n    }\n    /**\n     * Stream an event from the kernel\n     *\n     * @param parentHeader The parent header.\n     * @param content The stream content.\n     */\n    stream(content, parentHeader = undefined) {\n        var _a;\n        const parentHeaderValue = typeof parentHeader !== 'undefined' ? parentHeader : this._parentHeader;\n        const message = KernelMessage.createMessage({\n            channel: 'iopub',\n            msgType: 'stream',\n            // TODO: better handle this\n            session: (_a = parentHeaderValue === null || parentHeaderValue === void 0 ? void 0 : parentHeaderValue.session) !== null && _a !== void 0 ? _a : '',\n            parentHeader: parentHeaderValue,\n            content,\n        });\n        this._sendMessage(message);\n    }\n    /**\n     * Send a `display_data` message to the client.\n     *\n     * @param parentHeader The parent header.\n     * @param content The display_data content.\n     */\n    displayData(content, parentHeader = undefined) {\n        var _a, _b;\n        // Make sure metadata is always set\n        const parentHeaderValue = typeof parentHeader !== 'undefined' ? parentHeader : this._parentHeader;\n        content.metadata = (_a = content.metadata) !== null && _a !== void 0 ? _a : {};\n        const message = KernelMessage.createMessage({\n            channel: 'iopub',\n            msgType: 'display_data',\n            // TODO: better handle this\n            session: (_b = parentHeaderValue === null || parentHeaderValue === void 0 ? void 0 : parentHeaderValue.session) !== null && _b !== void 0 ? _b : '',\n            parentHeader: parentHeaderValue,\n            content,\n        });\n        this._sendMessage(message);\n    }\n    /**\n     * Send a `input_request` message to the client.\n     *\n     * @param parentHeader The parent header.\n     * @param content The input_request content.\n     */\n    inputRequest(content, parentHeader = undefined) {\n        var _a;\n        const parentHeaderValue = typeof parentHeader !== 'undefined' ? parentHeader : this._parentHeader;\n        const message = KernelMessage.createMessage({\n            channel: 'stdin',\n            msgType: 'input_request',\n            // TODO: better handle this\n            session: (_a = parentHeaderValue === null || parentHeaderValue === void 0 ? void 0 : parentHeaderValue.session) !== null && _a !== void 0 ? _a : '',\n            parentHeader: parentHeaderValue,\n            content,\n        });\n        this._sendMessage(message);\n    }\n    /**\n     * Send an `execute_result` message.\n     *\n     * @param parentHeader The parent header.\n     * @param content The execute result content.\n     */\n    publishExecuteResult(content, parentHeader = undefined) {\n        var _a;\n        const parentHeaderValue = typeof parentHeader !== 'undefined' ? parentHeader : this._parentHeader;\n        const message = KernelMessage.createMessage({\n            channel: 'iopub',\n            msgType: 'execute_result',\n            // TODO: better handle this\n            session: (_a = parentHeaderValue === null || parentHeaderValue === void 0 ? void 0 : parentHeaderValue.session) !== null && _a !== void 0 ? _a : '',\n            parentHeader: parentHeaderValue,\n            content,\n        });\n        this._sendMessage(message);\n    }\n    /**\n     * Send an `error` message to the client.\n     *\n     * @param parentHeader The parent header.\n     * @param content The error content.\n     */\n    publishExecuteError(content, parentHeader = undefined) {\n        var _a;\n        const parentHeaderValue = typeof parentHeader !== 'undefined' ? parentHeader : this._parentHeader;\n        const message = KernelMessage.createMessage({\n            channel: 'iopub',\n            msgType: 'error',\n            // TODO: better handle this\n            session: (_a = parentHeaderValue === null || parentHeaderValue === void 0 ? void 0 : parentHeaderValue.session) !== null && _a !== void 0 ? _a : '',\n            parentHeader: parentHeaderValue,\n            content,\n        });\n        this._sendMessage(message);\n    }\n    /**\n     * Send a `update_display_data` message to the client.\n     *\n     * @param parentHeader The parent header.\n     * @param content The update_display_data content.\n     */\n    updateDisplayData(content, parentHeader = undefined) {\n        var _a;\n        const parentHeaderValue = typeof parentHeader !== 'undefined' ? parentHeader : this._parentHeader;\n        const message = KernelMessage.createMessage({\n            channel: 'iopub',\n            msgType: 'update_display_data',\n            // TODO: better handle this\n            session: (_a = parentHeaderValue === null || parentHeaderValue === void 0 ? void 0 : parentHeaderValue.session) !== null && _a !== void 0 ? _a : '',\n            parentHeader: parentHeaderValue,\n            content,\n        });\n        this._sendMessage(message);\n    }\n    /**\n     * Send a `clear_output` message to the client.\n     *\n     * @param parentHeader The parent header.\n     * @param content The clear_output content.\n     */\n    clearOutput(content, parentHeader = undefined) {\n        var _a;\n        const parentHeaderValue = typeof parentHeader !== 'undefined' ? parentHeader : this._parentHeader;\n        const message = KernelMessage.createMessage({\n            channel: 'iopub',\n            msgType: 'clear_output',\n            // TODO: better handle this\n            session: (_a = parentHeaderValue === null || parentHeaderValue === void 0 ? void 0 : parentHeaderValue.session) !== null && _a !== void 0 ? _a : '',\n            parentHeader: parentHeaderValue,\n            content,\n        });\n        this._sendMessage(message);\n    }\n    /**\n     * Send a `comm` message to the client.\n     *\n     * @param .\n     */\n    handleComm(type, content, metadata, buffers, parentHeader = undefined) {\n        var _a;\n        const parentHeaderValue = typeof parentHeader !== 'undefined' ? parentHeader : this._parentHeader;\n        const message = KernelMessage.createMessage({\n            channel: 'iopub',\n            msgType: type,\n            // TODO: better handle this\n            session: (_a = parentHeaderValue === null || parentHeaderValue === void 0 ? void 0 : parentHeaderValue.session) !== null && _a !== void 0 ? _a : '',\n            parentHeader: parentHeaderValue,\n            content,\n            metadata,\n            buffers,\n        });\n        this._sendMessage(message);\n    }\n    /**\n     * Send an 'idle' status message.\n     *\n     * @param parent The parent message\n     */\n    _idle(parent) {\n        const message = KernelMessage.createMessage({\n            msgType: 'status',\n            session: parent.header.session,\n            parentHeader: parent.header,\n            channel: 'iopub',\n            content: {\n                execution_state: 'idle',\n            },\n        });\n        this._sendMessage(message);\n    }\n    /**\n     * Send a 'busy' status message.\n     *\n     * @param parent The parent message.\n     */\n    _busy(parent) {\n        const message = KernelMessage.createMessage({\n            msgType: 'status',\n            session: parent.header.session,\n            parentHeader: parent.header,\n            channel: 'iopub',\n            content: {\n                execution_state: 'busy',\n            },\n        });\n        this._sendMessage(message);\n    }\n    /**\n     * Handle a kernel_info_request message\n     *\n     * @param parent The parent message.\n     */\n    async _kernelInfo(parent) {\n        const content = await this.kernelInfoRequest();\n        const message = KernelMessage.createMessage({\n            msgType: 'kernel_info_reply',\n            channel: 'shell',\n            session: parent.header.session,\n            parentHeader: parent.header,\n            content,\n        });\n        this._sendMessage(message);\n    }\n    /**\n     * Handle a `history_request` message\n     *\n     * @param msg The parent message.\n     */\n    async _historyRequest(msg) {\n        const historyMsg = msg;\n        const message = KernelMessage.createMessage({\n            msgType: 'history_reply',\n            channel: 'shell',\n            parentHeader: historyMsg.header,\n            session: msg.header.session,\n            content: {\n                status: 'ok',\n                history: this._history,\n            },\n        });\n        this._sendMessage(message);\n    }\n    /**\n     * Send an `execute_input` message.\n     *\n     * @param msg The parent message.\n     */\n    _executeInput(msg) {\n        const parent = msg;\n        const code = parent.content.code;\n        const message = KernelMessage.createMessage({\n            msgType: 'execute_input',\n            parentHeader: parent.header,\n            channel: 'iopub',\n            session: msg.header.session,\n            content: {\n                code,\n                execution_count: this._executionCount,\n            },\n        });\n        this._sendMessage(message);\n    }\n    /**\n     * Handle an execute_request message.\n     *\n     * @param msg The parent message.\n     */\n    async _execute(msg) {\n        const executeMsg = msg;\n        const content = executeMsg.content;\n        if (content.store_history) {\n            this._executionCount++;\n        }\n        // TODO: handle differently\n        this._parentHeader = executeMsg.header;\n        this._executeInput(executeMsg);\n        if (content.store_history) {\n            this._history.push([0, 0, content.code]);\n        }\n        const reply = await this.executeRequest(executeMsg.content);\n        const message = KernelMessage.createMessage({\n            msgType: 'execute_reply',\n            channel: 'shell',\n            parentHeader: executeMsg.header,\n            session: msg.header.session,\n            content: reply,\n        });\n        this._sendMessage(message);\n    }\n    /**\n     * Handle an complete_request message\n     *\n     * @param msg The parent message.\n     */\n    async _complete(msg) {\n        const completeMsg = msg;\n        const content = await this.completeRequest(completeMsg.content);\n        const message = KernelMessage.createMessage({\n            msgType: 'complete_reply',\n            parentHeader: completeMsg.header,\n            channel: 'shell',\n            session: msg.header.session,\n            content,\n        });\n        this._sendMessage(message);\n    }\n    /**\n     * Handle an inspect_request message\n     *\n     * @param msg The parent message.\n     */\n    async _inspect(msg) {\n        const inspectMsg = msg;\n        const content = await this.inspectRequest(inspectMsg.content);\n        const message = KernelMessage.createMessage({\n            msgType: 'inspect_reply',\n            parentHeader: inspectMsg.header,\n            channel: 'shell',\n            session: msg.header.session,\n            content,\n        });\n        this._sendMessage(message);\n    }\n    /**\n     * Handle an is_complete_request message\n     *\n     * @param msg The parent message.\n     */\n    async _isCompleteRequest(msg) {\n        const isCompleteMsg = msg;\n        const content = await this.isCompleteRequest(isCompleteMsg.content);\n        const message = KernelMessage.createMessage({\n            msgType: 'is_complete_reply',\n            parentHeader: isCompleteMsg.header,\n            channel: 'shell',\n            session: msg.header.session,\n            content,\n        });\n        this._sendMessage(message);\n    }\n}\n//# sourceMappingURL=kernel.js.map","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst proxyMarker = Symbol(\"Comlink.proxy\");\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\nconst finalizer = Symbol(\"Comlink.finalizer\");\nconst throwMarker = Symbol(\"Comlink.thrown\");\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler = {\n    canHandle: (val) => isObject(val) && val[proxyMarker],\n    serialize(obj) {\n        const { port1, port2 } = new MessageChannel();\n        expose(obj, port1);\n        return [port2, [port2]];\n    },\n    deserialize(port) {\n        port.start();\n        return wrap(port);\n    },\n};\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler = {\n    canHandle: (value) => isObject(value) && throwMarker in value,\n    serialize({ value }) {\n        let serialized;\n        if (value instanceof Error) {\n            serialized = {\n                isError: true,\n                value: {\n                    message: value.message,\n                    name: value.name,\n                    stack: value.stack,\n                },\n            };\n        }\n        else {\n            serialized = { isError: false, value };\n        }\n        return [serialized, []];\n    },\n    deserialize(serialized) {\n        if (serialized.isError) {\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\n        }\n        throw serialized.value;\n    },\n};\n/**\n * Allows customizing the serialization of certain values.\n */\nconst transferHandlers = new Map([\n    [\"proxy\", proxyTransferHandler],\n    [\"throw\", throwTransferHandler],\n]);\nfunction isAllowedOrigin(allowedOrigins, origin) {\n    for (const allowedOrigin of allowedOrigins) {\n        if (origin === allowedOrigin || allowedOrigin === \"*\") {\n            return true;\n        }\n        if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction expose(obj, ep = globalThis, allowedOrigins = [\"*\"]) {\n    ep.addEventListener(\"message\", function callback(ev) {\n        if (!ev || !ev.data) {\n            return;\n        }\n        if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n            console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n            return;\n        }\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n        let returnValue;\n        try {\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n            switch (type) {\n                case \"GET\" /* MessageType.GET */:\n                    {\n                        returnValue = rawValue;\n                    }\n                    break;\n                case \"SET\" /* MessageType.SET */:\n                    {\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n                        returnValue = true;\n                    }\n                    break;\n                case \"APPLY\" /* MessageType.APPLY */:\n                    {\n                        returnValue = rawValue.apply(parent, argumentList);\n                    }\n                    break;\n                case \"CONSTRUCT\" /* MessageType.CONSTRUCT */:\n                    {\n                        const value = new rawValue(...argumentList);\n                        returnValue = proxy(value);\n                    }\n                    break;\n                case \"ENDPOINT\" /* MessageType.ENDPOINT */:\n                    {\n                        const { port1, port2 } = new MessageChannel();\n                        expose(obj, port2);\n                        returnValue = transfer(port1, [port1]);\n                    }\n                    break;\n                case \"RELEASE\" /* MessageType.RELEASE */:\n                    {\n                        returnValue = undefined;\n                    }\n                    break;\n                default:\n                    return;\n            }\n        }\n        catch (value) {\n            returnValue = { value, [throwMarker]: 0 };\n        }\n        Promise.resolve(returnValue)\n            .catch((value) => {\n            return { value, [throwMarker]: 0 };\n        })\n            .then((returnValue) => {\n            const [wireValue, transferables] = toWireValue(returnValue);\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n            if (type === \"RELEASE\" /* MessageType.RELEASE */) {\n                // detach and deactive after sending release response above.\n                ep.removeEventListener(\"message\", callback);\n                closeEndPoint(ep);\n                if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n                    obj[finalizer]();\n                }\n            }\n        })\n            .catch((error) => {\n            // Send Serialization Error To Caller\n            const [wireValue, transferables] = toWireValue({\n                value: new TypeError(\"Unserializable return value\"),\n                [throwMarker]: 0,\n            });\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n        });\n    });\n    if (ep.start) {\n        ep.start();\n    }\n}\nfunction isMessagePort(endpoint) {\n    return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n    if (isMessagePort(endpoint))\n        endpoint.close();\n}\nfunction wrap(ep, target) {\n    return createProxy(ep, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n    if (isReleased) {\n        throw new Error(\"Proxy has been released and is not useable\");\n    }\n}\nfunction releaseEndpoint(ep) {\n    return requestResponseMessage(ep, {\n        type: \"RELEASE\" /* MessageType.RELEASE */,\n    }).then(() => {\n        closeEndPoint(ep);\n    });\n}\nconst proxyCounter = new WeakMap();\nconst proxyFinalizers = \"FinalizationRegistry\" in globalThis &&\n    new FinalizationRegistry((ep) => {\n        const newCount = (proxyCounter.get(ep) || 0) - 1;\n        proxyCounter.set(ep, newCount);\n        if (newCount === 0) {\n            releaseEndpoint(ep);\n        }\n    });\nfunction registerProxy(proxy, ep) {\n    const newCount = (proxyCounter.get(ep) || 0) + 1;\n    proxyCounter.set(ep, newCount);\n    if (proxyFinalizers) {\n        proxyFinalizers.register(proxy, ep, proxy);\n    }\n}\nfunction unregisterProxy(proxy) {\n    if (proxyFinalizers) {\n        proxyFinalizers.unregister(proxy);\n    }\n}\nfunction createProxy(ep, path = [], target = function () { }) {\n    let isProxyReleased = false;\n    const proxy = new Proxy(target, {\n        get(_target, prop) {\n            throwIfProxyReleased(isProxyReleased);\n            if (prop === releaseProxy) {\n                return () => {\n                    unregisterProxy(proxy);\n                    releaseEndpoint(ep);\n                    isProxyReleased = true;\n                };\n            }\n            if (prop === \"then\") {\n                if (path.length === 0) {\n                    return { then: () => proxy };\n                }\n                const r = requestResponseMessage(ep, {\n                    type: \"GET\" /* MessageType.GET */,\n                    path: path.map((p) => p.toString()),\n                }).then(fromWireValue);\n                return r.then.bind(r);\n            }\n            return createProxy(ep, [...path, prop]);\n        },\n        set(_target, prop, rawValue) {\n            throwIfProxyReleased(isProxyReleased);\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n            const [value, transferables] = toWireValue(rawValue);\n            return requestResponseMessage(ep, {\n                type: \"SET\" /* MessageType.SET */,\n                path: [...path, prop].map((p) => p.toString()),\n                value,\n            }, transferables).then(fromWireValue);\n        },\n        apply(_target, _thisArg, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const last = path[path.length - 1];\n            if (last === createEndpoint) {\n                return requestResponseMessage(ep, {\n                    type: \"ENDPOINT\" /* MessageType.ENDPOINT */,\n                }).then(fromWireValue);\n            }\n            // We just pretend that `bind()` didn’t happen.\n            if (last === \"bind\") {\n                return createProxy(ep, path.slice(0, -1));\n            }\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, {\n                type: \"APPLY\" /* MessageType.APPLY */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n        construct(_target, rawArgumentList) {\n            throwIfProxyReleased(isProxyReleased);\n            const [argumentList, transferables] = processArguments(rawArgumentList);\n            return requestResponseMessage(ep, {\n                type: \"CONSTRUCT\" /* MessageType.CONSTRUCT */,\n                path: path.map((p) => p.toString()),\n                argumentList,\n            }, transferables).then(fromWireValue);\n        },\n    });\n    registerProxy(proxy, ep);\n    return proxy;\n}\nfunction myFlat(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n    const processed = argumentList.map(toWireValue);\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\nconst transferCache = new WeakMap();\nfunction transfer(obj, transfers) {\n    transferCache.set(obj, transfers);\n    return obj;\n}\nfunction proxy(obj) {\n    return Object.assign(obj, { [proxyMarker]: true });\n}\nfunction windowEndpoint(w, context = globalThis, targetOrigin = \"*\") {\n    return {\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\n        addEventListener: context.addEventListener.bind(context),\n        removeEventListener: context.removeEventListener.bind(context),\n    };\n}\nfunction toWireValue(value) {\n    for (const [name, handler] of transferHandlers) {\n        if (handler.canHandle(value)) {\n            const [serializedValue, transferables] = handler.serialize(value);\n            return [\n                {\n                    type: \"HANDLER\" /* WireValueType.HANDLER */,\n                    name,\n                    value: serializedValue,\n                },\n                transferables,\n            ];\n        }\n    }\n    return [\n        {\n            type: \"RAW\" /* WireValueType.RAW */,\n            value,\n        },\n        transferCache.get(value) || [],\n    ];\n}\nfunction fromWireValue(value) {\n    switch (value.type) {\n        case \"HANDLER\" /* WireValueType.HANDLER */:\n            return transferHandlers.get(value.name).deserialize(value.value);\n        case \"RAW\" /* WireValueType.RAW */:\n            return value.value;\n    }\n}\nfunction requestResponseMessage(ep, msg, transfers) {\n    return new Promise((resolve) => {\n        const id = generateUUID();\n        ep.addEventListener(\"message\", function l(ev) {\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\n                return;\n            }\n            ep.removeEventListener(\"message\", l);\n            resolve(ev.data);\n        });\n        if (ep.start) {\n            ep.start();\n        }\n        ep.postMessage(Object.assign({ id }, msg), transfers);\n    });\n}\nfunction generateUUID() {\n    return new Array(4)\n        .fill(0)\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n        .join(\"-\");\n}\n\nexport { createEndpoint, expose, finalizer, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","import { PromiseDelegate } from '@lumino/coreutils';\nimport { PageConfig } from '@jupyterlab/coreutils';\nimport { BaseKernel } from '@jupyterlite/kernel';\nimport { wrap } from 'comlink';\nimport { allJSONUrl, pipliteWheelUrl } from './_pypi';\n/**\n * A kernel that executes Python code with Pyodide.\n */\nexport class PyodideKernel extends BaseKernel {\n    /**\n     * Instantiate a new PyodideKernel\n     *\n     * @param options The instantiation options for a new PyodideKernel\n     */\n    constructor(options) {\n        super(options);\n        this._ready = new PromiseDelegate();\n        this._worker = this.initWorker(options);\n        this._worker.onmessage = (e) => this._processWorkerMessage(e.data);\n        this._remoteKernel = wrap(this._worker);\n        this.initRemote(options);\n    }\n    /**\n     * Load the worker.\n     *\n     * ### Note\n     *\n     * Subclasses must implement this typographically almost _exactly_ for\n     * webpack to find it.\n     */\n    initWorker(options) {\n        return new Worker(new URL('./comlink.worker.js', import.meta.url), {\n            type: 'module',\n        });\n    }\n    async initRemote(options) {\n        const remoteOptions = this.initRemoteOptions(options);\n        await this._remoteKernel.initialize(remoteOptions);\n        this._ready.resolve();\n    }\n    initRemoteOptions(options) {\n        const { pyodideUrl } = options;\n        const indexUrl = pyodideUrl.slice(0, pyodideUrl.lastIndexOf('/') + 1);\n        const baseUrl = PageConfig.getBaseUrl();\n        const pipliteUrls = [...(options.pipliteUrls || []), allJSONUrl.default];\n        const disablePyPIFallback = !!options.disablePyPIFallback;\n        return {\n            baseUrl,\n            pyodideUrl,\n            indexUrl,\n            pipliteWheelUrl: options.pipliteWheelUrl || pipliteWheelUrl.default,\n            pipliteUrls,\n            disablePyPIFallback,\n            location: this.location,\n            mountDrive: options.mountDrive,\n        };\n    }\n    /**\n     * Dispose the kernel.\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this._worker.terminate();\n        this._worker = null;\n        super.dispose();\n    }\n    /**\n     * A promise that is fulfilled when the kernel is ready.\n     */\n    get ready() {\n        return this._ready.promise;\n    }\n    /**\n     * Process a message coming from the pyodide web worker.\n     *\n     * @param msg The worker message to process.\n     */\n    _processWorkerMessage(msg) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        if (!msg.type) {\n            return;\n        }\n        switch (msg.type) {\n            case 'stream': {\n                const bundle = (_a = msg.bundle) !== null && _a !== void 0 ? _a : { name: 'stdout', text: '' };\n                this.stream(bundle, msg.parentHeader);\n                break;\n            }\n            case 'input_request': {\n                const bundle = (_b = msg.content) !== null && _b !== void 0 ? _b : { prompt: '', password: false };\n                this.inputRequest(bundle, msg.parentHeader);\n                break;\n            }\n            case 'display_data': {\n                const bundle = (_c = msg.bundle) !== null && _c !== void 0 ? _c : { data: {}, metadata: {}, transient: {} };\n                this.displayData(bundle, msg.parentHeader);\n                break;\n            }\n            case 'update_display_data': {\n                const bundle = (_d = msg.bundle) !== null && _d !== void 0 ? _d : { data: {}, metadata: {}, transient: {} };\n                this.updateDisplayData(bundle, msg.parentHeader);\n                break;\n            }\n            case 'clear_output': {\n                const bundle = (_e = msg.bundle) !== null && _e !== void 0 ? _e : { wait: false };\n                this.clearOutput(bundle, msg.parentHeader);\n                break;\n            }\n            case 'execute_result': {\n                const bundle = (_f = msg.bundle) !== null && _f !== void 0 ? _f : {\n                    execution_count: 0,\n                    data: {},\n                    metadata: {},\n                };\n                this.publishExecuteResult(bundle, msg.parentHeader);\n                break;\n            }\n            case 'execute_error': {\n                const bundle = (_g = msg.bundle) !== null && _g !== void 0 ? _g : { ename: '', evalue: '', traceback: [] };\n                this.publishExecuteError(bundle, msg.parentHeader);\n                break;\n            }\n            case 'comm_msg':\n            case 'comm_open':\n            case 'comm_close': {\n                this.handleComm(msg.type, msg.content, msg.metadata, msg.buffers, msg.parentHeader);\n                break;\n            }\n        }\n    }\n    /**\n     * Handle a kernel_info_request message\n     */\n    async kernelInfoRequest() {\n        const content = {\n            implementation: 'pyodide',\n            implementation_version: '0.1.0',\n            language_info: {\n                codemirror_mode: {\n                    name: 'python',\n                    version: 3,\n                },\n                file_extension: '.py',\n                mimetype: 'text/x-python',\n                name: 'python',\n                nbconvert_exporter: 'python',\n                pygments_lexer: 'ipython3',\n                version: '3.8',\n            },\n            protocol_version: '5.3',\n            status: 'ok',\n            banner: 'A WebAssembly-powered Python kernel backed by Pyodide',\n            help_links: [\n                {\n                    text: 'Python (WASM) Kernel',\n                    url: 'https://pyodide.org',\n                },\n            ],\n        };\n        return content;\n    }\n    /**\n     * Handle an `execute_request` message\n     *\n     * @param msg The parent message.\n     */\n    async executeRequest(content) {\n        await this.ready;\n        const result = await this._remoteKernel.execute(content, this.parent);\n        result.execution_count = this.executionCount;\n        return result;\n    }\n    /**\n     * Handle an complete_request message\n     *\n     * @param msg The parent message.\n     */\n    async completeRequest(content) {\n        return await this._remoteKernel.complete(content, this.parent);\n    }\n    /**\n     * Handle an `inspect_request` message.\n     *\n     * @param content - The content of the request.\n     *\n     * @returns A promise that resolves with the response message.\n     */\n    async inspectRequest(content) {\n        return await this._remoteKernel.inspect(content, this.parent);\n    }\n    /**\n     * Handle an `is_complete_request` message.\n     *\n     * @param content - The content of the request.\n     *\n     * @returns A promise that resolves with the response message.\n     */\n    async isCompleteRequest(content) {\n        return await this._remoteKernel.isComplete(content, this.parent);\n    }\n    /**\n     * Handle a `comm_info_request` message.\n     *\n     * @param content - The content of the request.\n     *\n     * @returns A promise that resolves with the response message.\n     */\n    async commInfoRequest(content) {\n        return await this._remoteKernel.commInfo(content, this.parent);\n    }\n    /**\n     * Send an `comm_open` message.\n     *\n     * @param msg - The comm_open message.\n     */\n    async commOpen(msg) {\n        return await this._remoteKernel.commOpen(msg, this.parent);\n    }\n    /**\n     * Send an `comm_msg` message.\n     *\n     * @param msg - The comm_msg message.\n     */\n    async commMsg(msg) {\n        return await this._remoteKernel.commMsg(msg, this.parent);\n    }\n    /**\n     * Send an `comm_close` message.\n     *\n     * @param close - The comm_close message.\n     */\n    async commClose(msg) {\n        return await this._remoteKernel.commClose(msg, this.parent);\n    }\n    /**\n     * Send an `input_reply` message.\n     *\n     * @param content - The content of the reply.\n     */\n    async inputReply(content) {\n        return await this._remoteKernel.inputReply(content, this.parent);\n    }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 265;\nmodule.exports = webpackEmptyAsyncContext;"],"names":["BaseKernel","constructor","options","this","_history","_executionCount","_isDisposed","_disposed","Signal","_parentHeader","undefined","_parent","id","name","location","sendMessage","_id","_name","_location","_sendMessage","ready","Promise","resolve","isDisposed","disposed","executionCount","parentHeader","parent","dispose","emit","async","msg","_busy","header","msg_type","_kernelInfo","_execute","inputReply","content","_inspect","_isCompleteRequest","_complete","_historyRequest","commOpen","commMsg","commClose","_idle","stream","_a","parentHeaderValue","message","KernelMessage","channel","msgType","session","displayData","_b","metadata","inputRequest","publishExecuteResult","publishExecuteError","updateDisplayData","clearOutput","handleComm","type","buffers","execution_state","kernelInfoRequest","historyMsg","status","history","_executeInput","code","execution_count","executeMsg","store_history","push","reply","executeRequest","completeMsg","completeRequest","inspectMsg","inspectRequest","isCompleteMsg","isCompleteRequest","proxyMarker","Symbol","createEndpoint","releaseProxy","finalizer","throwMarker","isObject","val","transferHandlers","Map","canHandle","serialize","obj","port1","port2","MessageChannel","expose","deserialize","port","start","wrap","value","serialized","Error","isError","stack","Object","assign","ep","globalThis","allowedOrigins","addEventListener","callback","ev","data","origin","allowedOrigin","RegExp","test","isAllowedOrigin","console","warn","path","argumentList","map","fromWireValue","returnValue","slice","reduce","prop","rawValue","apply","proxy","transfers","transferCache","set","transfer","catch","then","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","error","TypeError","endpoint","isMessagePort","close","target","createProxy","throwIfProxyReleased","isReleased","releaseEndpoint","requestResponseMessage","proxyCounter","WeakMap","proxyFinalizers","FinalizationRegistry","newCount","get","isProxyReleased","Proxy","_target","unregister","unregisterProxy","length","r","p","toString","bind","_thisArg","rawArgumentList","last","processArguments","construct","register","registerProxy","processed","v","arr","Array","prototype","concat","handler","serializedValue","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","l","PyodideKernel","super","_ready","PromiseDelegate","_worker","initWorker","onmessage","e","_processWorkerMessage","_remoteKernel","initRemote","Worker","URL","remoteOptions","initRemoteOptions","initialize","pyodideUrl","indexUrl","lastIndexOf","baseUrl","PageConfig","pipliteUrls","disablePyPIFallback","pipliteWheelUrl","mountDrive","terminate","promise","_c","_d","_e","_f","_g","bundle","text","prompt","password","transient","wait","ename","evalue","traceback","implementation","implementation_version","language_info","codemirror_mode","version","file_extension","mimetype","nbconvert_exporter","pygments_lexer","protocol_version","banner","help_links","url","result","execute","complete","inspect","isComplete","commInfo","webpackEmptyAsyncContext","req","keys","module","exports"],"sourceRoot":""}