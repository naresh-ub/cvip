selector_to_html = {"a[href=\"lectures/lecture-9.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Feature Detection and Extraction<a class=\"headerlink\" href=\"#feature-detection-and-extraction\" title=\"Link to this heading\">#</a></h1><p>In this chapter, we move from <strong>depth estimation</strong> to one of the core tasks in classical computer vision: <strong>finding good feature points</strong>.</p>", "a[href=\"#course-syllabus\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Course Syllabus<a class=\"headerlink\" href=\"#course-syllabus\" title=\"Link to this heading\">#</a></h2><p>Complete details of course syllabus can be found here: <a class=\"reference internal\" href=\"syllabus.html\"><span class=\"std std-doc\">Syllabus</span></a></p>", "a[href=\"#course-schedule-2025\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Course Schedule (2025)<a class=\"headerlink\" href=\"#course-schedule-2025\" title=\"Link to this heading\">#</a></h3>", "a[href=\"lectures/lecture-2-3.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">How is an image formed?<a class=\"headerlink\" href=\"#how-is-an-image-formed\" title=\"Link to this heading\">#</a></h1><p>In this lecture, we shall understand the Math and Geometry behind Image Formation. In the <a class=\"reference internal\" href=\"#lecture1.ipynb\"><span class=\"xref myst\">previous lecture</span></a>, we learned that images are stored/read as <code class=\"docutils literal notranslate\"><span class=\"pre\">numpy</span> <span class=\"pre\">arrays</span></code>. In this lecture we understand the way in which a 3D object is captured on a 2D image plane. In fact, we will see that a <code class=\"docutils literal notranslate\"><span class=\"pre\">camera</span> <span class=\"pre\">is</span> <span class=\"pre\">nothing</span> <span class=\"pre\">but</span> <span class=\"pre\">a</span> <span class=\"pre\">function</span> <span class=\"pre\">that</span> <span class=\"pre\">maps</span> <span class=\"pre\">a</span> <span class=\"pre\">3D</span> <span class=\"pre\">point</span> <span class=\"pre\">in</span> <span class=\"pre\">real-world</span> <span class=\"pre\">onto</span> <span class=\"pre\">a</span> <span class=\"pre\">2D</span> <span class=\"pre\">point</span> <span class=\"pre\">on</span> <span class=\"pre\">the</span> <span class=\"pre\">image</span> <span class=\"pre\">plane</span></code>.</p><p>Let\u2019s get started with an object that we want to capture. For this lecture, let\u2019s choose an object with regular shape.</p>", "a[href=\"lectures/lecture-4.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Image Processing (Part 1) Spatial Domain<a class=\"headerlink\" href=\"#image-processing-part-1-spatial-domain\" title=\"Link to this heading\">#</a></h1><p>As we established multiple times in this course that images are nothing but <code class=\"docutils literal notranslate\"><span class=\"pre\">numpy</span> <span class=\"pre\">arrays</span></code> where each value in the grid represents a pixel. In the case of a grayscale image, the pixel represents intensity from <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span> <span class=\"pre\">to</span> <span class=\"pre\">255</span></code> and in the case of a colored RGB image, each pixel is a vector <code class=\"docutils literal notranslate\"><span class=\"pre\">[R,</span> <span class=\"pre\">G,</span> <span class=\"pre\">B]</span></code> values ranging from 0 to 255. Depending on different combinations of R, G, and B, we can visualize different colors at each pixel.</p><p><em>In this lecture, we will look at various image processing techniques that will result in extraction of various features from images.</em></p>", "a[href=\"#cse-4-573-intro-to-computer-vision-and-image-processing\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">CSE 4/573: Intro to Computer Vision and Image Processing<a class=\"headerlink\" href=\"#cse-4-573-intro-to-computer-vision-and-image-processing\" title=\"Link to this heading\">#</a></h1><p>Welcome to CSE 4/573: CVIP course (Summer 2025). This website contains <strong><em>everything</em> (all material)</strong> for the course. To support engaging and interactive learning, this website is powered by <a class=\"reference external\" href=\"https://jupyterbook.org/\">Jupyter Book</a> and the <a class=\"reference external\" href=\"https://teachbooks.io/\">TeachBooks</a> package. The site hosts all course content in an accessible and interactive format, including self-hosted animated lecture slides via <a class=\"reference external\" href=\"https://revealjs.com/\">Reveal.JS</a>, executable live code blocks with <a class=\"reference external\" href=\"https://github.com/executablebooks/thebe\">Thebe</a>, rich 3D visualizations using <a class=\"reference external\" href=\"https://plotly.com/python/\">Plotly</a>, spaced-repetition flashcards through <a class=\"reference external\" href=\"https://github.com/jmshea/jupytercards\">JupyterCards</a>, and auto-graded practice quizzes via <a class=\"reference external\" href=\"https://github.com/jmshea/jupyterquiz\">Jupyter Quizzes</a>. This platform enhances student engagement by blending theory with hands-on experimentation directly in the browser.</p>", "a[href=\"#instructor\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Instructor<a class=\"headerlink\" href=\"#instructor\" title=\"Link to this heading\">#</a></h2><h3>Course Schedule (2025)<a class=\"headerlink\" href=\"#course-schedule-2025\" title=\"Link to this heading\">#</a></h3>", "a[href=\"lectures/lecture-10-11.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Computer Vision applications with Neural Networks<a class=\"headerlink\" href=\"#computer-vision-applications-with-neural-networks\" title=\"Link to this heading\">#</a></h1><p>In this section, we transition from classical vision techniques to modern <strong>data-driven learning</strong> methods: neural networks.</p><p>The core idea is simple: a neural network is a <strong>trainable function approximator</strong>. It can learn to represent very complex mappings by adjusting its internal parameters.</p>", "a[href=\"lectures/lecture-6-7-8.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Depth Estimation using Stereo Vision<a class=\"headerlink\" href=\"#depth-estimation-using-stereo-vision\" title=\"Link to this heading\">#</a></h1><h2>What is Stereo Vision?<a class=\"headerlink\" href=\"#what-is-stereo-vision\" title=\"Link to this heading\">#</a></h2><p>Stereo vision is a <strong>classical computer vision technique</strong> that mimics human binocular vision to perceive depth. Just like your left and right eyes capture slightly different views of the world, two cameras placed at slightly different positions observe the same scene from different angles.</p>", "a[href=\"syllabus.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Course Logistics and Syllabus<a class=\"headerlink\" href=\"#course-logistics-and-syllabus\" title=\"Link to this heading\">#</a></h1><h2>Course Information<a class=\"headerlink\" href=\"#course-information\" title=\"Link to this heading\">#</a></h2>", "a[href=\"lectures/lecture-1.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">What is a Pixel and what is an Image?<a class=\"headerlink\" href=\"#what-is-a-pixel-and-what-is-an-image\" title=\"Link to this heading\">#</a></h1><p>Images are made up of <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Pixel#:~:text=In%20digital%20imaging%2C%20a%20pixel,can%20be%20manipulated%20through%20software\">pixels</a>, small units that represent the intensity or color at specific coordinates. Each pixel can be a single grayscale value or a tuple of values for color channels like RGB. In scientific computing and computer vision, images are typically stored as NumPy arrays: 2D arrays for grayscale images and 3D arrays (height \u00d7 width \u00d7 channels) for color images. This structured representation allows efficient numerical manipulation, making NumPy a powerful foundation for image processing, filtering, and machine learning applications.</p>", "a[href=\"lectures/lecture-5.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Image Processing (Part 2) Fourier Domain<a class=\"headerlink\" href=\"#image-processing-part-2-fourier-domain\" title=\"Link to this heading\">#</a></h1><h2>What is a Function in the Time Domain?<a class=\"headerlink\" href=\"#what-is-a-function-in-the-time-domain\" title=\"Link to this heading\">#</a></h2><p><strong>Mathematically:</strong><br/>\n<span class=\"math notranslate nohighlight\">\\( f(t): \\mathbb{R} \\to \\mathbb{R} \\)</span> \u2014 maps time to amplitude.</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(`main ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: false,
                placement: 'auto-start', maxWidth: 500, interactive: true, boundary: document.body, appendTo: document.body,
                onShow(instance) {MathJax.typesetPromise([instance.popper]).then(() => {});},
            });
        };
    };
    console.log("tippy tips loaded!");
};
