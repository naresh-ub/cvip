selector_to_html = {"a[href=\"#how-do-we-handle-scale\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">How do we handle scale?<a class=\"headerlink\" href=\"#how-do-we-handle-scale\" title=\"Link to this heading\">#</a></h2><p>Descriptors like <strong>HOG</strong> (Histogram of Oriented Gradients) help:</p>", "a[href=\"#why-does-this-matter\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Why does this matter?<a class=\"headerlink\" href=\"#why-does-this-matter\" title=\"Link to this heading\">#</a></h3><p>If you shrink or zoom an image:</p>", "a[href=\"#local-feature-detection-vs-scale-invariance\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Local Feature Detection vs. Scale Invariance<a class=\"headerlink\" href=\"#local-feature-detection-vs-scale-invariance\" title=\"Link to this heading\">#</a></h2><p>We\u2019ve seen that <strong>Harris corners</strong> are great for detecting points with sharp intensity changes \u2014 but they are <strong>not scale invariant</strong>.</p>", "a[href=\"#structure-tensor\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Structure Tensor<a class=\"headerlink\" href=\"#structure-tensor\" title=\"Link to this heading\">#</a></h2><p>Next, we compute the <strong>second moment matrix</strong> <span class=\"math notranslate nohighlight\">\\(M\\)</span> for each pixel using the gradients.</p><p>We apply a <strong>window function</strong> \u2014 in practice, we use a <strong>Gaussian</strong> or <strong>box filter</strong> to smooth the squared gradients.</p>", "a[href=\"#what-do-we-see-in-the-gradient-images\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">What Do We See in the Gradient Images?<a class=\"headerlink\" href=\"#what-do-we-see-in-the-gradient-images\" title=\"Link to this heading\">#</a></h2><p><strong>Edges</strong> appear as strong lines in these gradient maps.<br/>\nTogether, these gradients feed into the <strong>structure tensor</strong> for each pixel.</p>", "a[href=\"#why-are-features-important\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Why are features important?<a class=\"headerlink\" href=\"#why-are-features-important\" title=\"Link to this heading\">#</a></h2><p>When we work with multiple images (matching, tracking, depth), we rely on points that are:</p>", "a[href=\"#harris-corner-detector-theory\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Harris Corner Detector: Theory<a class=\"headerlink\" href=\"#harris-corner-detector-theory\" title=\"Link to this heading\">#</a></h2><p>The Harris corner detector works by measuring how much the image changes when a window is shifted in different directions.</p><p>Mathematically, the change in image intensity <span class=\"math notranslate nohighlight\">\\(E(u, v)\\)</span> for a small shift <span class=\"math notranslate nohighlight\">\\((u, v)\\)</span> is:</p>", "a[href=\"#what-is-a-good-corner\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">What is a Good Corner?<a class=\"headerlink\" href=\"#what-is-a-good-corner\" title=\"Link to this heading\">#</a></h2><p>A good corner is a point where the image intensity changes sharply in <strong>multiple directions</strong>.</p>", "a[href=\"#feature-detection-and-extraction\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Feature Detection and Extraction<a class=\"headerlink\" href=\"#feature-detection-and-extraction\" title=\"Link to this heading\">#</a></h1><p>In this chapter, we move from <strong>depth estimation</strong> to one of the core tasks in classical computer vision: <strong>finding good feature points</strong>.</p>", "a[href=\"#what-does-the-harris-response-show\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">What Does the Harris Response Show?<a class=\"headerlink\" href=\"#what-does-the-harris-response-show\" title=\"Link to this heading\">#</a></h2><p>The heatmap shows <strong>where corners are likely</strong>:</p>", "a[href=\"#what-this-cell-shows\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">What this cell shows:<a class=\"headerlink\" href=\"#what-this-cell-shows\" title=\"Link to this heading\">#</a></h2><p><strong>Key Insight:</strong><br/>\n<strong>Scale invariance</strong> is why advanced methods like <strong>SIFT</strong> and <strong>HOG</strong> are so powerful: they maintain the same signature even when the object changes size.</p>", "a[href=\"#harris-corner-response\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Harris Corner Response<a class=\"headerlink\" href=\"#harris-corner-response\" title=\"Link to this heading\">#</a></h2><p>Using the smoothed second moment matrix <span class=\"math notranslate nohighlight\">\\(M\\)</span>, compute:</p>", "a[href=\"#harris-corner-detection-what-we-see\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Harris Corner Detection: What We See<a class=\"headerlink\" href=\"#harris-corner-detection-what-we-see\" title=\"Link to this heading\">#</a></h2><p><strong>Key Takeaway:</strong><br/>\nHarris is simple, elegant, and works well for planar corners \u2014 but it does not handle changes in scale.</p><p>Next, we move to <strong>scale-invariant feature detection</strong> like <strong>SIFT</strong>, which extends this idea for multi-scale matching.</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(`main ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: false,
                placement: 'auto-start', maxWidth: 500, interactive: true, boundary: document.body, appendTo: document.body,
                onShow(instance) {MathJax.typesetPromise([instance.popper]).then(() => {});},
            });
        };
    };
    console.log("tippy tips loaded!");
};
