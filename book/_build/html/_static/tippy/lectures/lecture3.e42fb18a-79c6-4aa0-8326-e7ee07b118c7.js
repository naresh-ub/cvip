selector_to_html = {"a[href=\"#convolution-operation-in-signal-processing\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Convolution Operation in Signal Processing<a class=\"headerlink\" href=\"#convolution-operation-in-signal-processing\" title=\"Link to this heading\">#</a></h2><p>We now take a look at the convolution operation from signal processing</p>", "a[href=\"#bilinear-interpolation\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">BiLinear Interpolation<a class=\"headerlink\" href=\"#bilinear-interpolation\" title=\"Link to this heading\">#</a></h2><h3>Can Interpolation restore missing pixels from an image and perform inpainting task?<a class=\"headerlink\" href=\"#can-interpolation-restore-missing-pixels-from-an-image-and-perform-inpainting-task\" title=\"Link to this heading\">#</a></h3>", "a[href=\"#convolution-on-2d-images-code\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Convolution on 2D images Code<a class=\"headerlink\" href=\"#convolution-on-2d-images-code\" title=\"Link to this heading\">#</a></h3><p>Test with different kernels to understand what features are extracted by convolution operations.</p>", "a[href=\"#conv-demo\"]": "<figure class=\"align-center\" id=\"conv-demo\">\n<img alt=\"https://upload.wikimedia.org/wikipedia/commons/1/19/2D_Convolution_Animation.gif\" src=\"https://upload.wikimedia.org/wikipedia/commons/1/19/2D_Convolution_Animation.gif\"/>\n<figcaption>\n<p><span class=\"caption-number\">Fig. 1 </span><span class=\"caption-text\">Convolution Example</span><a class=\"headerlink\" href=\"#conv-demo\" title=\"Link to this image\">#</a></p>\n</figcaption>\n</figure>", "a[href=\"#can-interpolation-restore-missing-pixels-from-an-image-and-perform-inpainting-task\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Can Interpolation restore missing pixels from an image and perform inpainting task?<a class=\"headerlink\" href=\"#can-interpolation-restore-missing-pixels-from-an-image-and-perform-inpainting-task\" title=\"Link to this heading\">#</a></h3>", "a[href=\"#finally-convolutions-on-images\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Finally convolutions on images<a class=\"headerlink\" href=\"#finally-convolutions-on-images\" title=\"Link to this heading\">#</a></h2><p>Convolution is an operation that \u201cslides\u201d a small kernel <span class=\"math notranslate nohighlight\">\\(K\\)</span> over an image <span class=\"math notranslate nohighlight\">\\(I\\)</span>. At each location <span class=\"math notranslate nohighlight\">\\((i,j)\\)</span>, you take a weighted sum of the pixels under the kernel to produce the output pixel <span class=\"math notranslate nohighlight\">\\(O(i,j)\\)</span>.</p>", "a[href=\"#discrete-formula\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Discrete Formula<a class=\"headerlink\" href=\"#discrete-formula\" title=\"Link to this heading\">#</a></h3><p>The convolution <span class=\"math notranslate nohighlight\">\\(O = I * K\\)</span> is defined by</p>", "a[href=\"#image-processing-part-1-image-transformations-and-the-convolution-operation\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Image Processing (Part 1) Image Transformations and the Convolution Operation<a class=\"headerlink\" href=\"#image-processing-part-1-image-transformations-and-the-convolution-operation\" title=\"Link to this heading\">#</a></h1><p>As we established multiple times in this course that images are nothing but <code class=\"docutils literal notranslate\"><span class=\"pre\">numpy</span> <span class=\"pre\">arrays</span></code> where each value in the grid represents a pixel. In the case of a grayscale image, the pixel represents intensity from <code class=\"docutils literal notranslate\"><span class=\"pre\">0</span> <span class=\"pre\">to</span> <span class=\"pre\">255</span></code> and in the case of a colored RGB image, each pixel is a vector <code class=\"docutils literal notranslate\"><span class=\"pre\">[R,</span> <span class=\"pre\">G,</span> <span class=\"pre\">B]</span></code> values ranging from 0 to 255. Depending on different combinations of R, G, and B, we can visualize different colors at each pixel.</p><p><em>In this lecture, we will look at various image processing techniques that will result in extraction of various features from images.</em></p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(`main ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: false,
                placement: 'auto-start', maxWidth: 500, interactive: true, boundary: document.body, appendTo: document.body,
                onShow(instance) {MathJax.typesetPromise([instance.popper]).then(() => {});},
            });
        };
    };
    console.log("tippy tips loaded!");
};
